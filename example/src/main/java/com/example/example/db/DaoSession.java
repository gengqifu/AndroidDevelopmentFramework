package com.example.example.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig localUserDaoConfig;
    private final DaoConfig cloudDeviceDaoConfig;
    private final DaoConfig downloadInfoDaoConfig;
    private final DaoConfig uploadInfoDaoConfig;
    private final DaoConfig backupPhotoInfoDaoConfig;
    private final DaoConfig recentInfoDaoConfig;
    private final DaoConfig messageInfoDaoConfig;

    private final LocalUserDao localUserDao;
    private final CloudDeviceDao cloudDeviceDao;
    private final DownloadInfoDao downloadInfoDao;
    private final UploadInfoDao uploadInfoDao;
    private final BackupPhotoInfoDao backupPhotoInfoDao;
    private final RecentInfoDao recentInfoDao;
    private final MessageInfoDao messageInfoDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        localUserDaoConfig = daoConfigMap.get(LocalUserDao.class).clone();
        localUserDaoConfig.initIdentityScope(type);

        cloudDeviceDaoConfig = daoConfigMap.get(CloudDeviceDao.class).clone();
        cloudDeviceDaoConfig.initIdentityScope(type);

        downloadInfoDaoConfig = daoConfigMap.get(DownloadInfoDao.class).clone();
        downloadInfoDaoConfig.initIdentityScope(type);

        uploadInfoDaoConfig = daoConfigMap.get(UploadInfoDao.class).clone();
        uploadInfoDaoConfig.initIdentityScope(type);

        backupPhotoInfoDaoConfig = daoConfigMap.get(BackupPhotoInfoDao.class).clone();
        backupPhotoInfoDaoConfig.initIdentityScope(type);

        recentInfoDaoConfig = daoConfigMap.get(RecentInfoDao.class).clone();
        recentInfoDaoConfig.initIdentityScope(type);

        messageInfoDaoConfig = daoConfigMap.get(MessageInfoDao.class).clone();
        messageInfoDaoConfig.initIdentityScope(type);

        localUserDao = new LocalUserDao(localUserDaoConfig, this);
        cloudDeviceDao = new CloudDeviceDao(cloudDeviceDaoConfig, this);
        downloadInfoDao = new DownloadInfoDao(downloadInfoDaoConfig, this);
        uploadInfoDao = new UploadInfoDao(uploadInfoDaoConfig, this);
        backupPhotoInfoDao = new BackupPhotoInfoDao(backupPhotoInfoDaoConfig, this);
        recentInfoDao = new RecentInfoDao(recentInfoDaoConfig, this);
        messageInfoDao = new MessageInfoDao(messageInfoDaoConfig, this);

        registerDao(LocalUser.class, localUserDao);
        registerDao(CloudDevice.class, cloudDeviceDao);
        registerDao(DownloadInfo.class, downloadInfoDao);
        registerDao(UploadInfo.class, uploadInfoDao);
        registerDao(BackupPhotoInfo.class, backupPhotoInfoDao);
        registerDao(RecentInfo.class, recentInfoDao);
        registerDao(MessageInfo.class, messageInfoDao);
    }

    public void clear() {
        localUserDaoConfig.getIdentityScope().clear();
        cloudDeviceDaoConfig.getIdentityScope().clear();
        downloadInfoDaoConfig.getIdentityScope().clear();
        uploadInfoDaoConfig.getIdentityScope().clear();
        backupPhotoInfoDaoConfig.getIdentityScope().clear();
        recentInfoDaoConfig.getIdentityScope().clear();
        messageInfoDaoConfig.getIdentityScope().clear();
    }

    public LocalUserDao getLocalUserDao() {
        return localUserDao;
    }

    public CloudDeviceDao getCloudDeviceDao() {
        return cloudDeviceDao;
    }

    public DownloadInfoDao getDownloadInfoDao() {
        return downloadInfoDao;
    }

    public UploadInfoDao getUploadInfoDao() {
        return uploadInfoDao;
    }

    public BackupPhotoInfoDao getBackupPhotoInfoDao() {
        return backupPhotoInfoDao;
    }

    public RecentInfoDao getRecentInfoDao() {
        return recentInfoDao;
    }

    public MessageInfoDao getMessageInfoDao() {
        return messageInfoDao;
    }

}
